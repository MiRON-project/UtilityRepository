CMAKE_MINIMUM_REQUIRED(VERSION 3.0)

FIND_FILE(SMART_MACROS SmartMacros2.cmake PATHS $ENV{SMART_ROOT_ACE}/CMakeMacros /opt/smartSoftAce/CMakeMacros)
INCLUDE(${SMART_MACROS})

SMART_UTILITY_PROJECT(metric-ff)

#SMART_UTILITY_BUILD_DEBIAN_PACKAGE(${PROJECT_NAME} ${PACKAGE_VERSION_STRING})

ADD_CUSTOM_TARGET(${PROJECT_NAME} ALL COMMAND ${CMAKE_BUILD_TOOL} -f Makefile.Metric-FF ff WORKING_DIRECTORY ${PROJECT_SOURCE_DIR} COMMENT "Build ${PROJECT_NAME}")

IF(AUTOINSTALL)
  ADD_CUSTOM_TARGET(${PROJECT_NAME}AutoInstall ALL COMMAND ${CMAKE_COMMAND} ARGS -P cmake_install.cmake WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR} COMMENT "Install ${PROJECT_NAME}")
  ADD_DEPENDENCIES(${PROJECT_NAME}AutoInstall ${PROJECT_NAME})
ENDIF(AUTOINSTALL)

ADD_CUSTOM_TARGET(nodep)
ADD_DEPENDENCIES(nodep ${PROJECT_NAME}AutoInstall)

ADD_CUSTOM_TARGET(${PROJECT_NAME}DistClean COMMAND ${CMAKE_BUILD_TOOL} -f Makefile.Metric-FF clean WORKING_DIRECTORY ${PROJECT_SOURCE_DIR} COMMENT "Clean ${PROJECT_NAME}")
ADD_DEPENDENCIES(distclean ${PROJECT_NAME}DistClean)

SET_SOURCE_FILES_PROPERTIES(${PROJECT_SOURCE_DIR}/metric-ff PROPERTIES GENERATED TRUE)

INSTALL(FILES ${PROJECT_SOURCE_DIR}/metric-ff PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ DESTINATION bin)
#INSTALL(DIRECTORY ${PROJECT_BINARY_DIR}/json-install/include/libjson DESTINATION include)
#INSTALL(FILES ${PROJECT_BINARY_DIR}/JsonConfig.cmake DESTINATION modules)

